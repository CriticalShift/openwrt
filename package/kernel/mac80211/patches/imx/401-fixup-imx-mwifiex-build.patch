--- a/drivers/net/wireless/Kconfig
+++ b/drivers/net/wireless/Kconfig
@@ -23,6 +23,7 @@ source "drivers/net/wireless/ath/Kconfig
 source "drivers/net/wireless/atmel/Kconfig"
 source "drivers/net/wireless/broadcom/Kconfig"
 #source "drivers/net/wireless/cisco/Kconfig"
+source "drivers/net/wireless/imx/Kconfig"
 source "drivers/net/wireless/intel/Kconfig"
 source "drivers/net/wireless/intersil/Kconfig"
 source "drivers/net/wireless/marvell/Kconfig"
--- a/drivers/net/wireless/Makefile
+++ b/drivers/net/wireless/Makefile
@@ -13,6 +13,7 @@ obj-$(CPTCFG_WLAN_VENDOR_INTERSIL) += in
 obj-$(CPTCFG_WLAN_VENDOR_MARVELL) += marvell/
 obj-$(CPTCFG_WLAN_VENDOR_MEDIATEK) += mediatek/
 obj-$(CPTCFG_WLAN_VENDOR_MICROCHIP) += microchip/
+obj-$(CPTCFG_WLAN_VENDOR_NXP) += imx/
 obj-$(CPTCFG_WLAN_VENDOR_PURELIFI) += purelifi/
 obj-$(CPTCFG_WLAN_VENDOR_QUANTENNA) += quantenna/
 obj-$(CPTCFG_WLAN_VENDOR_RALINK) += ralink/
--- /dev/null
+++ b/drivers/net/wireless/imx/Kconfig
@@ -0,0 +1,36 @@
+# SPDX-License-Identifier: GPL-2.0-only
+config WLAN_VENDOR_NXP
+	bool "NXP devices"
+	default y
+	help
+	  If you have a wireless card belonging to this class, say Y.
+
+	  Note that the answer to this question doesn't directly affect the
+	  kernel: saying N will just cause the configurator to skipp all the
+	  questions about these cards. If you say Y, you will be asked for
+	  your specific card in the following questions.
+
+config NXP_IW612
+	tristate "NXP IW612 (SDIO) WLAN driver support"
+	depends on m
+	depends on MMC && MAC80211 && CFG80211
+	help
+	  This option enables support for the NXP IW612 wireless chip in
+	  SDIO mode. Select M (recommended), if you have an NXP IW612 module.
+
+config IMX_MLAN
+	tristate "NXP IMX MLAN driver module"
+	depends on NXP_IW612
+	help
+	  This option enables the MLAN driver that is required by NXP mwifiex
+	  (MOAL) based drivers. This driver must be included when building an
+	  NXP/IMX wireless module.
+
+config IMX_MOAL
+	tristate "NXP IMX MOAL driver module"
+	depends on NXP_IW612
+	depends on IMX_MLAN
+	help
+	  This option enables the MOAL driver that is required by NXP mwifiex
+	  (MOAL) based drivers. This driver must be included when building an
+	  NXP/IMX wireless module.
--- a/drivers/net/wireless/imx/Makefile
+++ b/drivers/net/wireless/imx/Makefile
@@ -16,675 +16,82 @@
 #  this warranty disclaimer.
 #
 
-CONFIG_COMPATDIR=n
-ifeq ($(CONFIG_COMPATDIR), y)
-COMPATDIR=/lib/modules/$(KERNELVERSION_X86)/build/compat-wireless-3.2-rc1-1/include
-CC ?=		$(CROSS_COMPILE)gcc -I$(COMPATDIR)
-endif
+ccflags-y += \
+	-DDEBUG_LEVEL1 \
+	-DDFS_TESTING_SUPPORT \
+	-DDUMP_TO_PROC \
+	-DFPNUM='"92"' \
+	-DIMX_SUPPORT \
+	-DLINUX \
+	-DMAC80211_SUPPORT \
+	-DMAC80211_SUPPORT_UAP \
+	-DMFG_CMD_SUPPORT \
+	-DMLAN_64BIT \
+	-DMULTI_CHAN_SUPPORT \
+	-DOPENWRT \
+	-DREASSOCIATION \
+	-DSDIO \
+	-DSDIO_MMC \
+	-DSDIO_SUSPEND_RESUME \
+	-DSTA_CFG80211 \
+	-DSTA_SUPPORT \
+	-DTASKLET_SUPPORT \
+	-DUAP_CFG80211 \
+	-DUAP_SUPPORT \
+	-DCONFIG_PROC_FS \
+	-DSD9177 \
+	-I$(src)
+
+ccflags-y += \
+	-Wno-implicit-fallthrough \
+	-Wno-unused-variable
+
+moal-$(CPTCFG_IMX_MOAL) += \
+	mlinux/moal_main.o \
+	mlinux/moal_ioctl.o \
+	mlinux/moal_shim.o \
+	mlinux/moal_eth_ioctl.o \
+	mlinux/moal_init.o \
+	mlinux/moal_uap.o \
+	mlinux/moal_cfg80211.o \
+	mlinux/moal_cfg80211_util.o \
+	mlinux/moal_sta_cfg80211.o \
+	mlinux/moal_uap_cfg80211.o \
+	mlinux/moal_proc.o \
+	mlinux/moal_debug.o \
+	mlinux/moal_sdio_mmc.o
+
+mlan-$(CPTCFG_IMX_MLAN) += \
+	mlan/mlan_shim.o \
+	mlan/mlan_init.o \
+	mlan/mlan_txrx.o \
+	mlan/mlan_cmdevt.o \
+	mlan/mlan_misc.o \
+	mlan/mlan_cfp.o \
+	mlan/mlan_module.o \
+	mlan/mlan_wmm.o \
+	mlan/mlan_sdio.o \
+	mlan/mlan_11n_aggr.o \
+	mlan/mlan_11n_rxreorder.o \
+	mlan/mlan_11n.o \
+	mlan/mlan_11ac.o \
+	mlan/mlan_11ax.o \
+	mlan/mlan_11d.o \
+	mlan/mlan_11h.o \
+	mlan/mlan_meas.o \
+	mlan/mlan_scan.o \
+	mlan/mlan_sta_ioctl.o \
+	mlan/mlan_sta_rx.o \
+	mlan/mlan_sta_tx.o \
+	mlan/mlan_sta_event.o \
+	mlan/mlan_sta_cmd.o \
+	mlan/mlan_sta_cmdresp.o \
+	mlan/mlan_join.o \
+	mlan/mlan_uap_ioctl.o \
+	mlan/mlan_uap_cmdevent.o \
+	mlan/mlan_uap_txrx.o
 
-LD ?=		$(CROSS_COMPILE)ld
-BACKUP=		/root/backup
-YMD=		`date +%Y%m%d%H%M`
+obj-$(CPTCFG_IMX_MLAN) += mlan.o
+obj-$(CPTCFG_IMX_MOAL) += moal.o
 
-#############################################################################
-# Configuration Options
-#############################################################################
-# Multi-chipsets
-CONFIG_SD8887=n
-CONFIG_SD8897=n
-CONFIG_USB8897=n
-CONFIG_PCIE8897=n
-CONFIG_SD8977=n
-CONFIG_SD8978=y
-CONFIG_USB8978=n
-CONFIG_SD8997=y
-CONFIG_USB8997=n
-CONFIG_PCIE8997=y
-CONFIG_SD8987=y
-CONFIG_SD9097=n
-CONFIG_SD9177=y
-CONFIG_SD8801=y
-CONFIG_USB8801=n
-CONFIG_USB9097=n
-CONFIG_PCIE9097=n
-CONFIG_SD9098=y
-CONFIG_USB9098=n
-CONFIG_PCIE9098=y
-CONFIG_SDIW624=n
-CONFIG_SDAW693=n
-CONFIG_PCIEIW624=n
-CONFIG_USBIW624=n
-CONFIG_PCIEAW693=n
 
-
-
-# Debug Option
-# DEBUG LEVEL n/1/2:
-# n: NO DEBUG
-# 1: Only PRINTM(MMSG,...), PRINTM(MFATAL,...), ...
-# 2: All PRINTM()
-CONFIG_DEBUG=1
-
-# Enable STA mode support
-CONFIG_STA_SUPPORT=y
-
-# Enable uAP mode support
-CONFIG_UAP_SUPPORT=y
-
-# Enable WIFIDIRECT support
-CONFIG_WIFI_DIRECT_SUPPORT=y
-
-
-# Re-association in driver
-CONFIG_REASSOCIATION=y
-
-
-# Manufacturing firmware support
-CONFIG_MFG_CMD_SUPPORT=y
-
-# OpenWrt support
-CONFIG_OPENWRT_SUPPORT=n
-
-# Big-endian platform
-CONFIG_BIG_ENDIAN=n
-
-
-
-
-# SDIO suspend/resume
-CONFIG_SDIO_SUSPEND_RESUME=y
-
-# DFS testing support
-CONFIG_DFS_TESTING_SUPPORT=y
-
-# Multi-channel support
-CONFIG_MULTI_CHAN_SUPPORT=y
-
-
-
-CONFIG_DUMP_TO_PROC=y
-
-CONFIG_TASKLET_SUPPORT=y
-
-
-#32bit app over 64bit kernel support
-CONFIG_USERSPACE_32BIT_OVER_KERNEL_64BIT=n
-
-
-#############################################################################
-# Select Platform Tools
-#############################################################################
-
-MODEXT = ko
-ccflags-y += -I$(PWD)/mlan
-ccflags-y += -DLINUX
-
-
-
-
-
-
-ARCH ?= arm64
-CONFIG_IMX_SUPPORT=y
-ifeq ($(CONFIG_IMX_SUPPORT),y)
-ccflags-y += -DIMX_SUPPORT
-ifneq ($(ANDROID_PRODUCT_OUT),)
-ccflags-y += -DIMX_ANDROID
-ccflags-y += -Wno-implicit-fallthrough
-CONFIG_ANDROID_KERNEL=y
-endif
-endif
-
-LD += -S
-
-BINDIR = ../bin_wlan
-APPDIR= $(shell if test -d "mapp"; then echo mapp; fi)
-
-#############################################################################
-# Compiler Flags
-#############################################################################
-
-	ccflags-y += -I$(KERNELDIR)/include
-
-	ccflags-y += -DFPNUM='"92"'
-
-ifeq ($(CONFIG_DEBUG),1)
-	ccflags-y += -DDEBUG_LEVEL1
-endif
-
-ifeq ($(CONFIG_DEBUG),2)
-	ccflags-y += -DDEBUG_LEVEL1
-	ccflags-y += -DDEBUG_LEVEL2
-	DBG=	-dbg
-endif
-
-ifeq ($(CONFIG_64BIT), y)
-	ccflags-y += -DMLAN_64BIT
-endif
-
-ifeq ($(CONFIG_STA_SUPPORT),y)
-	ccflags-y += -DSTA_SUPPORT
-ifeq ($(CONFIG_REASSOCIATION),y)
-	ccflags-y += -DREASSOCIATION
-endif
-else
-CONFIG_WIFI_DIRECT_SUPPORT=n
-CONFIG_STA_WEXT=n
-CONFIG_STA_CFG80211=n
-endif
-
-ifeq ($(CONFIG_UAP_SUPPORT),y)
-	ccflags-y += -DUAP_SUPPORT
-else
-CONFIG_WIFI_DIRECT_SUPPORT=n
-CONFIG_UAP_WEXT=n
-CONFIG_UAP_CFG80211=n
-endif
-
-ifeq ($(CONFIG_WIFI_DIRECT_SUPPORT),y)
-	ccflags-y += -DWIFI_DIRECT_SUPPORT
-endif
-
-ifeq ($(CONFIG_MFG_CMD_SUPPORT),y)
-	ccflags-y += -DMFG_CMD_SUPPORT
-endif
-
-ifeq ($(CONFIG_BIG_ENDIAN),y)
-	ccflags-y += -DBIG_ENDIAN_SUPPORT
-endif
-
-ifeq ($(CONFIG_USERSPACE_32BIT_OVER_KERNEL_64BIT),y)
-	ccflags-y += -DUSERSPACE_32BIT_OVER_KERNEL_64BIT
-endif
-
-ifeq ($(CONFIG_SDIO_SUSPEND_RESUME),y)
-	ccflags-y += -DSDIO_SUSPEND_RESUME
-endif
-
-ifeq ($(CONFIG_MULTI_CHAN_SUPPORT),y)
-	ccflags-y += -DMULTI_CHAN_SUPPORT
-endif
-
-ifeq ($(CONFIG_DFS_TESTING_SUPPORT),y)
-	ccflags-y += -DDFS_TESTING_SUPPORT
-endif
-
-
-ifeq ($(CONFIG_ANDROID_KERNEL), y)
-	ccflags-y += -DANDROID_KERNEL
-	CONFIG_DUMP_TO_PROC=y
-endif
-
-ifeq ($(CONFIG_DUMP_TO_PROC), y)
-	ccflags-y += -DDUMP_TO_PROC
-endif
-
-ifeq ($(CONFIG_TASKLET_SUPPORT), y)
-	ccflags-y += -DTASKLET_SUPPORT
-endif
-
-ifeq ($(CONFIG_OPENWRT_SUPPORT), y)
-	ccflags-y += -DOPENWRT
-endif
-
-ifeq ($(CONFIG_T50), y)
-	ccflags-y += -DT50
-	ccflags-y += -DT40
-	ccflags-y += -DT3T
-endif
-
-ifeq ($(CONFIG_SD8887),y)
-	CONFIG_SDIO=y
-	ccflags-y += -DSD8887
-endif
-ifeq ($(CONFIG_SD8897),y)
-	CONFIG_SDIO=y
-	ccflags-y += -DSD8897
-endif
-ifeq ($(CONFIG_SD8977),y)
-	CONFIG_SDIO=y
-	ccflags-y += -DSD8977
-endif
-ifeq ($(CONFIG_SD8978),y)
-	CONFIG_SDIO=y
-	ccflags-y += -DSD8978
-endif
-ifeq ($(CONFIG_SD8997),y)
-	CONFIG_SDIO=y
-	ccflags-y += -DSD8997
-endif
-ifeq ($(CONFIG_SD8987),y)
-	CONFIG_SDIO=y
-	ccflags-y += -DSD8987
-endif
-ifeq ($(CONFIG_SD9097),y)
-	CONFIG_SDIO=y
-	ccflags-y += -DSD9097
-endif
-ifeq ($(CONFIG_SDIW624),y)
-	CONFIG_SDIO=y
-	ccflags-y += -DSDIW624
-endif
-ifeq ($(CONFIG_SDAW693),y)
-	CONFIG_SDIO=y
-	ccflags-y += -DSDAW693
-endif
-ifeq ($(CONFIG_SD9177),y)
-	CONFIG_SDIO=y
-	ccflags-y += -DSD9177
-endif
-ifeq ($(CONFIG_SD8801),y)
-	CONFIG_SDIO=y
-	ccflags-y += -DSD8801
-endif
-ifeq ($(CONFIG_SD9098),y)
-	CONFIG_SDIO=y
-	ccflags-y += -DSD9098
-endif
-ifeq ($(CONFIG_USB8801),y)
-	CONFIG_MUSB=y
-	ccflags-y += -DUSB8801
-endif
-ifeq ($(CONFIG_USB8897),y)
-	CONFIG_MUSB=y
-	ccflags-y += -DUSB8897
-endif
-ifeq ($(CONFIG_USB8997),y)
-	CONFIG_MUSB=y
-	ccflags-y += -DUSB8997
-endif
-ifeq ($(CONFIG_USB8978),y)
-	CONFIG_MUSB=y
-	ccflags-y += -DUSB8978
-endif
-ifeq ($(CONFIG_USB9097),y)
-	CONFIG_MUSB=y
-	ccflags-y += -DUSB9097
-endif
-ifeq ($(CONFIG_USBIW624),y)
-	CONFIG_MUSB=y
-	ccflags-y += -DUSBIW624
-endif
-ifeq ($(CONFIG_USB9098),y)
-	CONFIG_MUSB=y
-	ccflags-y += -DUSB9098
-endif
-ifeq ($(CONFIG_PCIE8897),y)
-	CONFIG_PCIE=y
-	ccflags-y += -DPCIE8897
-endif
-ifeq ($(CONFIG_PCIE8997),y)
-	CONFIG_PCIE=y
-	ccflags-y += -DPCIE8997
-endif
-ifeq ($(CONFIG_PCIE9097),y)
-	CONFIG_PCIE=y
-	ccflags-y += -DPCIE9097
-endif
-ifeq ($(CONFIG_PCIE9098),y)
-	CONFIG_PCIE=y
-	ccflags-y += -DPCIE9098
-endif
-ifeq ($(CONFIG_PCIEIW624),y)
-	CONFIG_PCIE=y
-	ccflags-y += -DPCIEIW624
-endif
-ifeq ($(CONFIG_PCIEAW693),y)
-	CONFIG_PCIE=y
-	ccflags-y += -DPCIEAW693
-endif
-ifeq ($(CONFIG_SDIO),y)
-	ccflags-y += -DSDIO
-	ccflags-y += -DSDIO_MMC
-endif
-ifeq ($(CONFIG_MUSB),y)
-	ccflags-y += -DUSB
-endif
-ifeq ($(CONFIG_PCIE),y)
-	ccflags-y += -DPCIE
-endif
-
-ifeq ($(CONFIG_MAC80211_SUPPORT),y)
-	ccflags-y += -DMAC80211_SUPPORT
-endif
-ifeq ($(CONFIG_MAC80211_SUPPORT_UAP),y)
-	ccflags-y += -DMAC80211_SUPPORT_UAP
-endif
-ifeq ($(CONFIG_MAC80211_SUPPORT_MESH),y)
-	ccflags-y += -DMAC80211_SUPPORT_MESH
-endif
-
-# add -Wno-packed-bitfield-compat when GCC version greater than 4.4
-GCC_VERSION := $(shell echo `gcc -dumpversion | cut -f1-2 -d.` \>= 4.4 | sed -e 's/\./*100+/g' | bc )
-ifeq ($(GCC_VERSION),1)
-	ccflags-y += -Wno-packed-bitfield-compat
-endif
-WimpGCC_VERSION := $(shell echo `gcc -dumpversion | cut -f1 -d.`| bc )
-ifeq ($(shell test $(WimpGCC_VERSION) -ge 7; echo $$?),0)
-ccflags-y += -Wimplicit-fallthrough=3
-endif
-#ccflags-y += -Wunused-but-set-variable
-#ccflags-y += -Wmissing-prototypes
-#ccflags-y += -Wold-style-definition
-#ccflags-y += -Wtype-limits
-#ccflags-y += -Wsuggest-attribute=format
-#ccflags-y += -Wmissing-include-dirs
-#ccflags-y += -Wshadow
-#ccflags-y += -Wsign-compare
-#ccflags-y += -Wunused-macros
-#ccflags-y += -Wmissing-field-initializers
-#ccflags-y += -Wstringop-truncation
-#ccflags-y += -Wmisleading-indentation
-#ccflags-y += -Wunused-const-variable
-#############################################################################
-# Make Targets
-#############################################################################
-
-ifneq ($(KERNELRELEASE),)
-
-ifeq ($(CONFIG_WIRELESS_EXT),y)
-ifeq ($(CONFIG_WEXT_PRIV),y)
-	# Enable WEXT for STA
-	CONFIG_STA_WEXT=y
-	# Enable WEXT for uAP
-	CONFIG_UAP_WEXT=y
-else
-# Disable WEXT for STA
-	CONFIG_STA_WEXT=n
-# Disable WEXT for uAP
-	CONFIG_UAP_WEXT=n
-endif
-endif
-
-# Enable CFG80211 for STA
-ifeq ($(CONFIG_CFG80211),y)
-	CONFIG_STA_CFG80211=y
-else
-ifeq ($(CONFIG_CFG80211),m)
-	CONFIG_STA_CFG80211=y
-else
-	CONFIG_STA_CFG80211=n
-endif
-endif
-
-# OpenWrt
-ifeq ($(CONFIG_OPENWRT_SUPPORT), y)
-ifeq ($(CPTCFG_CFG80211),y)
-	CONFIG_STA_CFG80211=y
-else
-ifeq ($(CPTCFG_CFG80211),m)
-	CONFIG_STA_CFG80211=y
-else
-	CONFIG_STA_CFG80211=n
-endif
-endif
-endif
-
-# Enable CFG80211 for uAP
-ifeq ($(CONFIG_CFG80211),y)
-	CONFIG_UAP_CFG80211=y
-else
-ifeq ($(CONFIG_CFG80211),m)
-	CONFIG_UAP_CFG80211=y
-else
-	CONFIG_UAP_CFG80211=n
-endif
-endif
-
-# OpenWrt
-ifeq ($(CONFIG_OPENWRT_SUPPORT), y)
-ifeq ($(CPTCFG_CFG80211),y)
-	CONFIG_STA_CFG80211=y
-else
-ifeq ($(CPTCFG_CFG80211),m)
-	CONFIG_STA_CFG80211=y
-else
-	CONFIG_STA_CFG80211=n
-endif
-endif
-endif
-
-ifneq ($(CONFIG_STA_SUPPORT),y)
-	CONFIG_WIFI_DIRECT_SUPPORT=n
-	CONFIG_STA_WEXT=n
-	CONFIG_STA_CFG80211=n
-endif
-
-ifneq ($(CONFIG_UAP_SUPPORT),y)
-	CONFIG_WIFI_DIRECT_SUPPORT=n
-	CONFIG_UAP_WEXT=n
-	CONFIG_UAP_CFG80211=n
-endif
-
-ifeq ($(CONFIG_STA_SUPPORT),y)
-ifeq ($(CONFIG_STA_WEXT),y)
-	ccflags-y += -DSTA_WEXT
-endif
-ifeq ($(CONFIG_STA_CFG80211),y)
-	ccflags-y += -DSTA_CFG80211
-endif
-endif
-ifeq ($(CONFIG_UAP_SUPPORT),y)
-ifeq ($(CONFIG_UAP_WEXT),y)
-	ccflags-y += -DUAP_WEXT
-endif
-ifeq ($(CONFIG_UAP_CFG80211),y)
-	ccflags-y += -DUAP_CFG80211
-endif
-endif
-
-print:
-ifeq ($(CONFIG_STA_SUPPORT),y)
-ifeq ($(CONFIG_STA_WEXT),n)
-ifeq ($(CONFIG_STA_CFG80211),n)
-	@echo "Can not build STA without WEXT or CFG80211"
-	exit 2
-endif
-endif
-endif
-ifeq ($(CONFIG_UAP_SUPPORT),y)
-ifeq ($(CONFIG_UAP_WEXT),n)
-ifeq ($(CONFIG_UAP_CFG80211),n)
-	@echo "Can not build UAP without WEXT or CFG80211"
-	exit 2
-endif
-endif
-endif
-
-
-
-
-
-MOALOBJS =	mlinux/moal_main.o \
-		mlinux/moal_ioctl.o \
-		mlinux/moal_shim.o \
-		mlinux/moal_eth_ioctl.o \
-		mlinux/moal_init.o
-
-MLANOBJS =	mlan/mlan_shim.o mlan/mlan_init.o \
-		mlan/mlan_txrx.o \
-		mlan/mlan_cmdevt.o mlan/mlan_misc.o \
-		mlan/mlan_cfp.o \
-		mlan/mlan_module.o
-
-MLANOBJS += mlan/mlan_wmm.o
-ifeq ($(CONFIG_MUSB),y)
-MLANOBJS += mlan/mlan_usb.o
-endif
-ifeq ($(CONFIG_SDIO),y)
-MLANOBJS += mlan/mlan_sdio.o
-endif
-ifeq ($(CONFIG_PCIE),y)
-MLANOBJS += mlan/mlan_pcie.o
-endif
-MLANOBJS += mlan/mlan_11n_aggr.o
-MLANOBJS += mlan/mlan_11n_rxreorder.o
-MLANOBJS += mlan/mlan_11n.o
-MLANOBJS += mlan/mlan_11ac.o
-MLANOBJS += mlan/mlan_11ax.o
-MLANOBJS += mlan/mlan_11d.o
-MLANOBJS += mlan/mlan_11h.o
-ifeq ($(CONFIG_STA_SUPPORT),y)
-MLANOBJS += mlan/mlan_meas.o
-MLANOBJS += mlan/mlan_scan.o \
-			mlan/mlan_sta_ioctl.o \
-			mlan/mlan_sta_rx.o \
-			mlan/mlan_sta_tx.o \
-			mlan/mlan_sta_event.o \
-			mlan/mlan_sta_cmd.o \
-			mlan/mlan_sta_cmdresp.o \
-			mlan/mlan_join.o
-ifeq ($(CONFIG_STA_WEXT),y)
-MOALOBJS += mlinux/moal_priv.o \
-            mlinux/moal_wext.o
-endif
-endif
-ifeq ($(CONFIG_UAP_SUPPORT),y)
-MLANOBJS += mlan/mlan_uap_ioctl.o
-MLANOBJS += mlan/mlan_uap_cmdevent.o
-MLANOBJS += mlan/mlan_uap_txrx.o
-MOALOBJS += mlinux/moal_uap.o
-ifeq ($(CONFIG_UAP_WEXT),y)
-MOALOBJS += mlinux/moal_uap_priv.o
-MOALOBJS += mlinux/moal_uap_wext.o
-endif
-endif
-ifeq ($(CONFIG_STA_CFG80211),y)
-MOALOBJS += mlinux/moal_cfg80211.o
-MOALOBJS += mlinux/moal_cfg80211_util.o
-MOALOBJS += mlinux/moal_sta_cfg80211.o
-endif
-ifeq ($(CONFIG_UAP_CFG80211),y)
-MOALOBJS += mlinux/moal_cfg80211.o
-MOALOBJS += mlinux/moal_cfg80211_util.o
-MOALOBJS += mlinux/moal_uap_cfg80211.o
-endif
-
-ifdef CONFIG_PROC_FS
-MOALOBJS += mlinux/moal_proc.o
-MOALOBJS += mlinux/moal_debug.o
-endif
-
-ifeq ($(CONFIG_MAC80211_SUPPORT),y)
-MOALOBJS += mlinux/moal_mac80211.o
-MLANOBJS += mlan/mlan_mac80211.o
-endif
-
-
-
-
-
-
-
-obj-m := mlan.o
-mlan-objs := $(MLANOBJS)
-
-ifeq ($(CONFIG_MUSB),y)
-MOALOBJS += mlinux/moal_usb.o
-endif
-ifeq ($(CONFIG_SDIO),y)
-MOALOBJS += mlinux/moal_sdio_mmc.o
-endif
-ifeq ($(CONFIG_PCIE),y)
-MOALOBJS += mlinux/moal_pcie.o
-endif
-obj-m += moal.o
-moal-objs := $(MOALOBJS)
-
-# Otherwise we were called directly from the command line; invoke the kernel build system.
-else
-
-default:
-	$(MAKE) -C $(KERNELDIR) M=$(PWD) ARCH=$(ARCH) CROSS_COMPILE=$(CROSS_COMPILE) modules
-
-endif
-
-###############################################################
-
-export		CC LD ccflags-y KERNELDIR
-
-.PHONY: mapp/mlanutl clean distclean
-	@echo "Finished Making NXP Wlan Linux Driver"
-
-mapp/mlanutl:
-	$(MAKE) -C $@
-
-echo:
-
-appsbuild:
-
-	@if [ ! -d $(BINDIR) ]; then \
-		mkdir $(BINDIR); \
-	fi
-
-	cp -f README $(BINDIR)
-
-ifneq ($(APPDIR),)
-	cp -rf mapp/mlanconfig/config $(BINDIR)
-	$(MAKE) -C mapp/mlanutl $@ INSTALLDIR=$(BINDIR)
-endif
-
-build:		echo default
-
-	@if [ ! -d $(BINDIR) ]; then \
-		mkdir $(BINDIR); \
-	fi
-
-	cp -f mlan.$(MODEXT) $(BINDIR)/mlan$(DBG).$(MODEXT)
-
-	cp -f moal.$(MODEXT) $(BINDIR)/moal$(DBG).$(MODEXT)
-	cp -rpf script/load $(BINDIR)/
-	cp -rpf script/unload $(BINDIR)/
-
-	cp -f README $(BINDIR)
-
-ifneq ($(APPDIR),)
-	cp -rf mapp/mlanconfig/config $(BINDIR)
-	$(MAKE) -C mapp/mlanutl $@ INSTALLDIR=$(BINDIR)
-endif
-
-clean:
-	-find . -name "*.o" -exec rm {} \;
-	-find . -name "*.ko" -exec rm {} \;
-	-find . -name ".*.cmd" -exec rm {} \;
-	-find . -name "*.mod.c" -exec rm {} \;
-	-find . -name "Module.symvers" -exec rm {} \;
-	-find . -name "Module.markers" -exec rm {} \;
-	-find . -name "modules.order" -exec rm {} \;
-	-find . -name ".*.dwo" -exec rm {} \;
-	-find . -name "*dwo" -exec rm {} \;
-	-rm -rf .tmp_versions
-ifneq ($(APPDIR),)
-	$(MAKE) -C mapp/mlanutl $@
-endif
-#ifdef SDIO
-#endif // SDIO
-
-install: default
-
-	cp -f mlan.$(MODEXT) $(INSTALLDIR)/mlan$(DBG).$(MODEXT)
-	cp -f moal.$(MODEXT) $(INSTALLDIR)/moal$(DBG).$(MODEXT)
-	echo $(INSTALLDIR)
-	echo "MX Driver Installed"
-
-distclean:
-	-find . -name "*.o" -exec rm {} \;
-	-find . -name "*.orig" -exec rm {} \;
-	-find . -name "*.swp" -exec rm {} \;
-	-find . -name "*.*~" -exec rm {} \;
-	-find . -name "*~" -exec rm {} \;
-	-find . -name "*.d" -exec rm {} \;
-	-find . -name "*.a" -exec rm {} \;
-	-find . -name "tags" -exec rm {} \;
-	-find . -name ".*" -exec rm -rf 2> /dev/null \;
-	-find . -name "*.ko" -exec rm {} \;
-	-find . -name ".*.cmd" -exec rm {} \;
-	-find . -name "*.mod.c" -exec rm {} \;
-	-find . -name ".*.dwo" -exec rm {} \;
-	-find . -name "*dwo" -exec rm {} \;
-	-rm -rf .tmp_versions
-ifneq ($(APPDIR),)
-	$(MAKE) -C mapp/mlanutl $@
-endif
-
-# End of file
--- a/drivers/net/wireless/imx/mlinux/moal_main.h
+++ b/drivers/net/wireless/imx/mlinux/moal_main.h
@@ -160,7 +160,7 @@ Change log:
 #define MAX(a, b) ((a) > (b) ? (a) : (b))
 #endif
 
-#define COMPAT_VERSION_CODE KERNEL_VERSION(0, 0, 0)
+#define COMPAT_VERSION_CODE KERNEL_VERSION(6, 1, 110)
 #define CFG80211_VERSION_CODE MAX(LINUX_VERSION_CODE, COMPAT_VERSION_CODE)
 
 #define IMX_ANDROID_13 0
--- a/drivers/net/wireless/imx/mlinux/moal_main.c
+++ b/drivers/net/wireless/imx/mlinux/moal_main.c
@@ -12431,7 +12431,7 @@ moal_handle *woal_add_card(void *card, s
 #define NAPI_BUDGET 64
 	if (moal_extflg_isset(handle, EXT_NAPI)) {
 		init_dummy_netdev(&handle->napi_dev);
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(6, 1, 0)
+#if CFG80211_VERSION_CODE >= KERNEL_VERSION(6, 1, 0)
 		netif_napi_add(&handle->napi_dev, &handle->napi_rx,
 			       woal_netdev_poll_rx);
 #else
--- a/drivers/net/wireless/imx/mlinux/moal_shim.c
+++ b/drivers/net/wireless/imx/mlinux/moal_shim.c
@@ -3920,7 +3920,7 @@ mlan_status moal_recv_event(t_void *pmoa
 #if CFG80211_VERSION_CODE >= KERNEL_VERSION(6, 3, 0)
 			cfg80211_ch_switch_notify(priv->netdev, &priv->chan, 0,
 						  0);
-#elif ((CFG80211_VERSION_CODE >= KERNEL_VERSION(6, 1, 0) && IMX_ANDROID_13))
+#elif ((CFG80211_VERSION_CODE >= KERNEL_VERSION(6, 1, 0) || IMX_ANDROID_13))
 			cfg80211_ch_switch_notify(priv->netdev, &priv->chan, 0,
 						  0);
 #elif ((CFG80211_VERSION_CODE >= KERNEL_VERSION(5, 19, 2)) ||                  \
--- a/drivers/net/wireless/imx/mlinux/moal_cfg80211.c
+++ b/drivers/net/wireless/imx/mlinux/moal_cfg80211.c
@@ -1521,7 +1521,7 @@ fail:
  */
 #endif
 int woal_cfg80211_add_key(struct wiphy *wiphy, struct net_device *netdev,
-#if ((KERNEL_VERSION(6, 1, 0) <= LINUX_VERSION_CODE) || IMX_ANDROID_13)
+#if ((KERNEL_VERSION(6, 1, 0) <= CFG80211_VERSION_CODE) || IMX_ANDROID_13)
 			  int link_id,
 #endif
 			  t_u8 key_index,
@@ -1597,7 +1597,7 @@ int woal_cfg80211_add_key(struct wiphy *
  */
 #endif
 int woal_cfg80211_del_key(struct wiphy *wiphy, struct net_device *netdev,
-#if ((KERNEL_VERSION(6, 1, 0) <= LINUX_VERSION_CODE) || IMX_ANDROID_13)
+#if ((KERNEL_VERSION(6, 1, 0) <= CFG80211_VERSION_CODE) || IMX_ANDROID_13)
 			  int link_id,
 #endif
 			  t_u8 key_index,
@@ -1656,7 +1656,7 @@ int woal_cfg80211_del_key(struct wiphy *
 #endif
 int woal_cfg80211_set_default_key(struct wiphy *wiphy,
 				  struct net_device *netdev,
-#if ((KERNEL_VERSION(6, 1, 0) <= LINUX_VERSION_CODE) || IMX_ANDROID_13)
+#if ((KERNEL_VERSION(6, 1, 0) <= CFG80211_VERSION_CODE) || IMX_ANDROID_13)
 				  int link_id,
 #endif
 				  t_u8 key_index
@@ -1695,7 +1695,7 @@ int woal_cfg80211_set_default_key(struct
 #if KERNEL_VERSION(2, 6, 30) <= CFG80211_VERSION_CODE
 int woal_cfg80211_set_default_mgmt_key(struct wiphy *wiphy,
 				       struct net_device *netdev,
-#if ((KERNEL_VERSION(6, 1, 0) <= LINUX_VERSION_CODE) || IMX_ANDROID_13)
+#if ((KERNEL_VERSION(6, 1, 0) <= CFG80211_VERSION_CODE) || IMX_ANDROID_13)
 				       int link_id,
 #endif
 				       t_u8 key_index)
@@ -1709,7 +1709,7 @@ int woal_cfg80211_set_default_mgmt_key(s
 #if KERNEL_VERSION(5, 10, 0) <= CFG80211_VERSION_CODE
 int woal_cfg80211_set_default_beacon_key(struct wiphy *wiphy,
 					 struct net_device *netdev,
-#if ((KERNEL_VERSION(6, 1, 0) <= LINUX_VERSION_CODE) || IMX_ANDROID_13)
+#if ((KERNEL_VERSION(6, 1, 0) <= CFG80211_VERSION_CODE) || IMX_ANDROID_13)
 					 int link_id,
 #endif
 					 t_u8 key_index)
@@ -3250,7 +3250,7 @@ int woal_cfg80211_mgmt_tx(struct wiphy *
 #if KERNEL_VERSION(3, 8, 0) > LINUX_VERSION_CODE
 	*cookie = random32() | 1;
 #else
-#if KERNEL_VERSION(6, 1, 0) > LINUX_VERSION_CODE
+#if KERNEL_VERSION(6, 1, 0) > CFG80211_VERSION_CODE
 	*cookie = prandom_u32() | 1;
 #else
 	*cookie = get_random_u32() | 1;
@@ -5200,7 +5200,7 @@ void woal_cfg80211_notify_channel(moal_p
 #endif
 #if CFG80211_VERSION_CODE >= KERNEL_VERSION(6, 3, 0)
 		cfg80211_ch_switch_notify(priv->netdev, &chandef, 0, 0);
-#elif ((CFG80211_VERSION_CODE >= KERNEL_VERSION(6, 1, 0) && IMX_ANDROID_13))
+#elif ((CFG80211_VERSION_CODE >= KERNEL_VERSION(6, 1, 0) || IMX_ANDROID_13))
 		cfg80211_ch_switch_notify(priv->netdev, &chandef, 0, 0);
 #elif ((CFG80211_VERSION_CODE >= KERNEL_VERSION(5, 19, 2)) ||                  \
        IMX_ANDROID_13 || IMX_ANDROID_12_BACKPORT)
--- a/drivers/net/wireless/imx/mlinux/moal_cfg80211.h
+++ b/drivers/net/wireless/imx/mlinux/moal_cfg80211.h
@@ -131,7 +131,7 @@ int woal_cfg80211_change_virtual_intf(st
 int woal_cfg80211_set_wiphy_params(struct wiphy *wiphy, u32 changed);
 
 int woal_cfg80211_add_key(struct wiphy *wiphy, struct net_device *dev,
-#if ((KERNEL_VERSION(6, 1, 0) <= LINUX_VERSION_CODE) || IMX_ANDROID_13)
+#if ((KERNEL_VERSION(6, 1, 0) <= CFG80211_VERSION_CODE) || IMX_ANDROID_13)
 			  int link_id,
 #endif
 			  t_u8 key_index,
@@ -141,7 +141,7 @@ int woal_cfg80211_add_key(struct wiphy *
 			  const t_u8 *mac_addr, struct key_params *params);
 
 int woal_cfg80211_del_key(struct wiphy *wiphy, struct net_device *dev,
-#if ((KERNEL_VERSION(6, 1, 0) <= LINUX_VERSION_CODE) || IMX_ANDROID_13)
+#if ((KERNEL_VERSION(6, 1, 0) <= CFG80211_VERSION_CODE) || IMX_ANDROID_13)
 			  int link_id,
 #endif
 			  t_u8 key_index,
@@ -217,7 +217,7 @@ int woal_cfg80211_set_channel(struct wip
 
 #if KERNEL_VERSION(2, 6, 37) < CFG80211_VERSION_CODE
 int woal_cfg80211_set_default_key(struct wiphy *wiphy, struct net_device *dev,
-#if ((KERNEL_VERSION(6, 1, 0) <= LINUX_VERSION_CODE) || IMX_ANDROID_13)
+#if ((KERNEL_VERSION(6, 1, 0) <= CFG80211_VERSION_CODE) || IMX_ANDROID_13)
 				  int link_id,
 #endif
 				  t_u8 key_index, bool ucast, bool mcast);
@@ -229,7 +229,7 @@ int woal_cfg80211_set_default_key(struct
 #if KERNEL_VERSION(2, 6, 30) <= CFG80211_VERSION_CODE
 int woal_cfg80211_set_default_mgmt_key(struct wiphy *wiphy,
 				       struct net_device *netdev,
-#if ((KERNEL_VERSION(6, 1, 0) <= LINUX_VERSION_CODE) || IMX_ANDROID_13)
+#if ((KERNEL_VERSION(6, 1, 0) <= CFG80211_VERSION_CODE) || IMX_ANDROID_13)
 				       int link_id,
 #endif
 				       t_u8 key_index);
@@ -238,7 +238,7 @@ int woal_cfg80211_set_default_mgmt_key(s
 #if KERNEL_VERSION(5, 10, 0) <= CFG80211_VERSION_CODE
 int woal_cfg80211_set_default_beacon_key(struct wiphy *wiphy,
 					 struct net_device *netdev,
-#if ((KERNEL_VERSION(6, 1, 0) <= LINUX_VERSION_CODE) || IMX_ANDROID_13)
+#if ((KERNEL_VERSION(6, 1, 0) <= CFG80211_VERSION_CODE) || IMX_ANDROID_13)
 					 int link_id,
 #endif
 					 t_u8 key_index);
--- a/drivers/net/wireless/imx/mlinux/moal_uap_cfg80211.c
+++ b/drivers/net/wireless/imx/mlinux/moal_uap_cfg80211.c
@@ -3763,7 +3763,7 @@ static void woal_switch_uap_channel(moal
 			sizeof(struct cfg80211_chan_def), sizeof(priv->chan));
 #if CFG80211_VERSION_CODE >= KERNEL_VERSION(6, 3, 0)
 	cfg80211_ch_switch_notify(priv->netdev, &priv->chan, 0, 0);
-#elif ((CFG80211_VERSION_CODE >= KERNEL_VERSION(6, 1, 0) && IMX_ANDROID_13))
+#elif ((CFG80211_VERSION_CODE >= KERNEL_VERSION(6, 1, 0) || IMX_ANDROID_13))
 	cfg80211_ch_switch_notify(priv->netdev, &priv->chan, 0, 0);
 #elif ((CFG80211_VERSION_CODE >= KERNEL_VERSION(5, 19, 2)) ||                  \
        IMX_ANDROID_13 || IMX_ANDROID_12_BACKPORT)
--- a/drivers/net/wireless/imx/mlinux/moal_sdio_mmc.c
+++ b/drivers/net/wireless/imx/mlinux/moal_sdio_mmc.c
@@ -1217,7 +1217,7 @@ static void woal_sdiommc_unregister_dev(
 		sdio_disable_func(card->func);
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(3, 2, 0)
 		if (handle->driver_status)
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 18, 0)
+#if CFG80211_VERSION_CODE >= KERNEL_VERSION(5, 18, 0)
 			mmc_hw_reset(func->card);
 #else
 			mmc_hw_reset(func->card->host);
@@ -2757,7 +2757,7 @@ void woal_sdio_reset_hw(moal_handle *han
 	sdio_release_irq(card->func);
 	sdio_disable_func(card->func);
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(3, 2, 0)
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 18, 0)
+#if CFG80211_VERSION_CODE >= KERNEL_VERSION(5, 18, 0)
 	mmc_hw_reset(func->card);
 #else
 	mmc_hw_reset(func->card->host);
